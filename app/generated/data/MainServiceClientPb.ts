/**
 * @fileoverview gRPC-Web generated client stub for kueater.data
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v6.30.0
// source: data/main.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as data_main_pb from '../data/main_pb'; // proto import: "data/main.proto"
import * as data_index_pb from '../data/index_pb'; // proto import: "data/index.proto"
import * as data_review_pb from '../data/review_pb'; // proto import: "data/review.proto"
import * as data_search_pb from '../data/search_pb'; // proto import: "data/search.proto"


export class KUEaterBackendClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetMenuItem = new grpcWeb.MethodDescriptor(
    '/kueater.data.KUEaterBackend/GetMenuItem',
    grpcWeb.MethodType.UNARY,
    data_main_pb.GetMenuRequest,
    data_main_pb.GetMenuResponse,
    (request: data_main_pb.GetMenuRequest) => {
      return request.serializeBinary();
    },
    data_main_pb.GetMenuResponse.deserializeBinary
  );

  getMenuItem(
    request: data_main_pb.GetMenuRequest,
    metadata?: grpcWeb.Metadata | null): Promise<data_main_pb.GetMenuResponse>;

  getMenuItem(
    request: data_main_pb.GetMenuRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: data_main_pb.GetMenuResponse) => void): grpcWeb.ClientReadableStream<data_main_pb.GetMenuResponse>;

  getMenuItem(
    request: data_main_pb.GetMenuRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: data_main_pb.GetMenuResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/kueater.data.KUEaterBackend/GetMenuItem',
        request,
        metadata || {},
        this.methodDescriptorGetMenuItem,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/kueater.data.KUEaterBackend/GetMenuItem',
    request,
    metadata || {},
    this.methodDescriptorGetMenuItem);
  }

  methodDescriptorGetStall = new grpcWeb.MethodDescriptor(
    '/kueater.data.KUEaterBackend/GetStall',
    grpcWeb.MethodType.UNARY,
    data_main_pb.GetStallRequest,
    data_main_pb.GetStallResponse,
    (request: data_main_pb.GetStallRequest) => {
      return request.serializeBinary();
    },
    data_main_pb.GetStallResponse.deserializeBinary
  );

  getStall(
    request: data_main_pb.GetStallRequest,
    metadata?: grpcWeb.Metadata | null): Promise<data_main_pb.GetStallResponse>;

  getStall(
    request: data_main_pb.GetStallRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: data_main_pb.GetStallResponse) => void): grpcWeb.ClientReadableStream<data_main_pb.GetStallResponse>;

  getStall(
    request: data_main_pb.GetStallRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: data_main_pb.GetStallResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/kueater.data.KUEaterBackend/GetStall',
        request,
        metadata || {},
        this.methodDescriptorGetStall,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/kueater.data.KUEaterBackend/GetStall',
    request,
    metadata || {},
    this.methodDescriptorGetStall);
  }

  methodDescriptorGetReview = new grpcWeb.MethodDescriptor(
    '/kueater.data.KUEaterBackend/GetReview',
    grpcWeb.MethodType.UNARY,
    data_main_pb.GetReviewRequest,
    data_main_pb.GetReviewResponse,
    (request: data_main_pb.GetReviewRequest) => {
      return request.serializeBinary();
    },
    data_main_pb.GetReviewResponse.deserializeBinary
  );

  getReview(
    request: data_main_pb.GetReviewRequest,
    metadata?: grpcWeb.Metadata | null): Promise<data_main_pb.GetReviewResponse>;

  getReview(
    request: data_main_pb.GetReviewRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: data_main_pb.GetReviewResponse) => void): grpcWeb.ClientReadableStream<data_main_pb.GetReviewResponse>;

  getReview(
    request: data_main_pb.GetReviewRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: data_main_pb.GetReviewResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/kueater.data.KUEaterBackend/GetReview',
        request,
        metadata || {},
        this.methodDescriptorGetReview,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/kueater.data.KUEaterBackend/GetReview',
    request,
    metadata || {},
    this.methodDescriptorGetReview);
  }

  methodDescriptorIndexGetMenuListings = new grpcWeb.MethodDescriptor(
    '/kueater.data.KUEaterBackend/IndexGetMenuListings',
    grpcWeb.MethodType.UNARY,
    data_index_pb.GetMenuListingsRequest,
    data_index_pb.GetMenuListingsResponse,
    (request: data_index_pb.GetMenuListingsRequest) => {
      return request.serializeBinary();
    },
    data_index_pb.GetMenuListingsResponse.deserializeBinary
  );

  indexGetMenuListings(
    request: data_index_pb.GetMenuListingsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<data_index_pb.GetMenuListingsResponse>;

  indexGetMenuListings(
    request: data_index_pb.GetMenuListingsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: data_index_pb.GetMenuListingsResponse) => void): grpcWeb.ClientReadableStream<data_index_pb.GetMenuListingsResponse>;

  indexGetMenuListings(
    request: data_index_pb.GetMenuListingsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: data_index_pb.GetMenuListingsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/kueater.data.KUEaterBackend/IndexGetMenuListings',
        request,
        metadata || {},
        this.methodDescriptorIndexGetMenuListings,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/kueater.data.KUEaterBackend/IndexGetMenuListings',
    request,
    metadata || {},
    this.methodDescriptorIndexGetMenuListings);
  }

  methodDescriptorIndexTopMenu = new grpcWeb.MethodDescriptor(
    '/kueater.data.KUEaterBackend/IndexTopMenu',
    grpcWeb.MethodType.UNARY,
    data_index_pb.TopMenuRequest,
    data_index_pb.TopMenu,
    (request: data_index_pb.TopMenuRequest) => {
      return request.serializeBinary();
    },
    data_index_pb.TopMenu.deserializeBinary
  );

  indexTopMenu(
    request: data_index_pb.TopMenuRequest,
    metadata?: grpcWeb.Metadata | null): Promise<data_index_pb.TopMenu>;

  indexTopMenu(
    request: data_index_pb.TopMenuRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: data_index_pb.TopMenu) => void): grpcWeb.ClientReadableStream<data_index_pb.TopMenu>;

  indexTopMenu(
    request: data_index_pb.TopMenuRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: data_index_pb.TopMenu) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/kueater.data.KUEaterBackend/IndexTopMenu',
        request,
        metadata || {},
        this.methodDescriptorIndexTopMenu,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/kueater.data.KUEaterBackend/IndexTopMenu',
    request,
    metadata || {},
    this.methodDescriptorIndexTopMenu);
  }

  methodDescriptorIndexTopStall = new grpcWeb.MethodDescriptor(
    '/kueater.data.KUEaterBackend/IndexTopStall',
    grpcWeb.MethodType.UNARY,
    data_index_pb.TopStallRequest,
    data_index_pb.TopStall,
    (request: data_index_pb.TopStallRequest) => {
      return request.serializeBinary();
    },
    data_index_pb.TopStall.deserializeBinary
  );

  indexTopStall(
    request: data_index_pb.TopStallRequest,
    metadata?: grpcWeb.Metadata | null): Promise<data_index_pb.TopStall>;

  indexTopStall(
    request: data_index_pb.TopStallRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: data_index_pb.TopStall) => void): grpcWeb.ClientReadableStream<data_index_pb.TopStall>;

  indexTopStall(
    request: data_index_pb.TopStallRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: data_index_pb.TopStall) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/kueater.data.KUEaterBackend/IndexTopStall',
        request,
        metadata || {},
        this.methodDescriptorIndexTopStall,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/kueater.data.KUEaterBackend/IndexTopStall',
    request,
    metadata || {},
    this.methodDescriptorIndexTopStall);
  }

  methodDescriptorSearch = new grpcWeb.MethodDescriptor(
    '/kueater.data.KUEaterBackend/Search',
    grpcWeb.MethodType.UNARY,
    data_search_pb.SearchRequest,
    data_search_pb.SearchResponse,
    (request: data_search_pb.SearchRequest) => {
      return request.serializeBinary();
    },
    data_search_pb.SearchResponse.deserializeBinary
  );

  search(
    request: data_search_pb.SearchRequest,
    metadata?: grpcWeb.Metadata | null): Promise<data_search_pb.SearchResponse>;

  search(
    request: data_search_pb.SearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: data_search_pb.SearchResponse) => void): grpcWeb.ClientReadableStream<data_search_pb.SearchResponse>;

  search(
    request: data_search_pb.SearchRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: data_search_pb.SearchResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/kueater.data.KUEaterBackend/Search',
        request,
        metadata || {},
        this.methodDescriptorSearch,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/kueater.data.KUEaterBackend/Search',
    request,
    metadata || {},
    this.methodDescriptorSearch);
  }

  methodDescriptorListReviews = new grpcWeb.MethodDescriptor(
    '/kueater.data.KUEaterBackend/ListReviews',
    grpcWeb.MethodType.UNARY,
    data_review_pb.ListReviewsRequest,
    data_review_pb.ListReviewsResponse,
    (request: data_review_pb.ListReviewsRequest) => {
      return request.serializeBinary();
    },
    data_review_pb.ListReviewsResponse.deserializeBinary
  );

  listReviews(
    request: data_review_pb.ListReviewsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<data_review_pb.ListReviewsResponse>;

  listReviews(
    request: data_review_pb.ListReviewsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: data_review_pb.ListReviewsResponse) => void): grpcWeb.ClientReadableStream<data_review_pb.ListReviewsResponse>;

  listReviews(
    request: data_review_pb.ListReviewsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: data_review_pb.ListReviewsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/kueater.data.KUEaterBackend/ListReviews',
        request,
        metadata || {},
        this.methodDescriptorListReviews,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/kueater.data.KUEaterBackend/ListReviews',
    request,
    metadata || {},
    this.methodDescriptorListReviews);
  }

  methodDescriptorPostReview = new grpcWeb.MethodDescriptor(
    '/kueater.data.KUEaterBackend/PostReview',
    grpcWeb.MethodType.UNARY,
    data_review_pb.PostReviewRequest,
    data_review_pb.PostReviewResponse,
    (request: data_review_pb.PostReviewRequest) => {
      return request.serializeBinary();
    },
    data_review_pb.PostReviewResponse.deserializeBinary
  );

  postReview(
    request: data_review_pb.PostReviewRequest,
    metadata?: grpcWeb.Metadata | null): Promise<data_review_pb.PostReviewResponse>;

  postReview(
    request: data_review_pb.PostReviewRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: data_review_pb.PostReviewResponse) => void): grpcWeb.ClientReadableStream<data_review_pb.PostReviewResponse>;

  postReview(
    request: data_review_pb.PostReviewRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: data_review_pb.PostReviewResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/kueater.data.KUEaterBackend/PostReview',
        request,
        metadata || {},
        this.methodDescriptorPostReview,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/kueater.data.KUEaterBackend/PostReview',
    request,
    metadata || {},
    this.methodDescriptorPostReview);
  }

}

